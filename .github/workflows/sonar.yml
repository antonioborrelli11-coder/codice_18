name: SonarCloud C/C++ Analysis with Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install build-wrapper
      run: |
        wget https://binaries.sonarsource.com/BuildWrapper/build-wrapper-linux-x86.zip
        unzip build-wrapper-linux-x86.zip -d build-wrapper
        chmod +x build-wrapper/build-wrapper-linux-x86/build-wrapper-linux-x86

    - name: Build with Build Wrapper
      run: |
        mkdir -p build_wrapper_output
        ./build-wrapper/build-wrapper-linux-x86/build-wrapper-linux-x86 --out-dir build_wrapper_output make clean all

    - name: Run tests and generate coverage
      run: |
        # Assumendo che i test siano eseguibili con make test
        mkdir -p coverage
        make test
        # Genera file .gcov per ogni file sorgente
        gcov -o . *.c
        # Genera report lcov
        lcov --capture --directory . --output-file coverage/coverage.info
        # Rimuove file non necessari
        lcov --remove coverage/coverage.info '/usr/*' --output-file coverage/coverage.info
        # Genera report HTML (opzionale)
        genhtml coverage/coverage.info --output-directory coverage/html

    - name: Run SonarCloud analysis
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        args: >
          -Dsonar.projectKey=antonioborrelli11-coder_codice_18
          -Dsonar.organization=antonioborrelli11-coder
          -Dsonar.cfamily.build-wrapper-output=build_wrapper_output
          -Dsonar.cfamily.gcov.reportsPath=coverage
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
