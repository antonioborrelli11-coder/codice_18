# SOLUZIONE 1: URL CORRETTO (GitHub Actions)
- name: Install SonarCloud build-wrapper
  run: |
    # URL AGGIORNATO e corretto
    wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
    unzip build-wrapper-linux-x86.zip
    chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64
    echo "$PWD/build-wrapper-linux-x86" >> $GITHUB_PATH

---

# SOLUZIONE 2: Alternativa con curl
- name: Install build-wrapper (alternative)
  run: |
    curl -sSLo build-wrapper-linux-x86.zip https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
    unzip build-wrapper-linux-x86.zip
    chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64
    export PATH="$PWD/build-wrapper-linux-x86:$PATH"

---

# SOLUZIONE 3: Workflow completo FUNZIONANTE
name: Build and SonarCloud

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install build-wrapper
      run: |
        # URL CORRETTO
        wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
        unzip build-wrapper-linux-x86.zip
        chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64
        echo "$PWD/build-wrapper-linux-x86" >> $GITHUB_PATH
    
    - name: Verify build-wrapper
      run: |
        which build-wrapper-linux-x86-64
        build-wrapper-linux-x86-64 --help
    
    - name: Clean and build
      run: |
        # Pulisci tutto
        make clean || rm -rf build/ *.o
        rm -rf bw-output/
        mkdir -p build
        
        # Build con wrapper
        build-wrapper-linux-x86-64 --out-dir bw-output gcc -std=c11 -Wall -Wextra -O2 -o build/program main.c
    
    - name: Verify capture
      run: |
        echo "=== Build wrapper output ==="
        ls -la bw-output/
        echo "=== Compile commands ==="
        cat bw-output/compile_commands.json
        # Verifica che non sia vuoto
        [ -s bw-output/compile_commands.json ] || (echo "❌ Empty compile_commands.json!" && exit 1)
    
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=antonioborrelli11-coder_mergesort
          -Dsonar.organization=antonioborrelli11-coder
          -Dsonar.sources=.
          -Dsonar.cfamily.compile-commands=bw-output/compile_commands.json

---

# SOLUZIONE 4: Test locale (se vuoi testare in locale)
#!/bin/bash
echo "🔧 Test build-wrapper locale"

# Download con URL corretto
echo "📥 Download build-wrapper..."
wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip
unzip build-wrapper-linux-x86.zip
chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64

# Test funzionamento
echo "🧪 Test build-wrapper..."
./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --help

# Clean e build
echo "🧹 Clean..."
make clean 2>/dev/null || rm -rf build/ *.o
rm -rf bw-output/

# Build con wrapper
echo "🔨 Build con wrapper..."
./build-wrapper-linux-x86/build-wrapper-linux-x86-64 --out-dir bw-output gcc -std=c11 -Wall -O2 -o program main.c

# Verifica risultato
echo "✅ Verifica..."
ls -la bw-output/
cat bw-output/compile_commands.json

---

# SOLUZIONE 5: Alternative se tutto fallisce
- name: Install build-wrapper (fallback)
  run: |
    # Prova prima l'URL principale
    wget https://sonarcloud.io/static/cpp/build-wrapper-linux-x86.zip || \
    # Se fallisce, prova GitHub releases
    wget https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.8.0.2856/build-wrapper-linux-x86.zip || \
    # Ultima risorsa: crea JSON manuale
    (mkdir -p bw-output && echo '[{"directory":"'"$PWD"'","command":"gcc -std=c11 -Wall -O2 -c main.c","file":"'"$PWD"'/main.c"}]' > bw-output/compile_commands.json)
    
    if [ -f build-wrapper-linux-x86.zip ]; then
      unzip build-wrapper-linux-x86.zip
      chmod +x build-wrapper-linux-x86/build-wrapper-linux-x86-64
      echo "$PWD/build-wrapper-linux-x86" >> $GITHUB_PATH
    fi
